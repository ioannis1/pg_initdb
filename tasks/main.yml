---
################################## Helper Variables
- shell:  uname -s
  register: result

- set_fact: os_family="{{result.stdout}}"

- set_fact: 
      HOME:  "/home"
      SHELL: "/bin/bash"
  when:  os_family == "Linux"

- set_fact: 
      HOME:  "/Users"
      SHELL: "/bin/bash"
  when:  os_family == "Darwin"

- set_fact: 
     HOME:   "/home"
     SHELL:  "/usr/local/bin/bash"
  when:  os_family == "FreeBSD"

#################################################     M A I N
- name:          fail unless ansible executing as unix user postgres
  when:          not (ansible_user_id == "postgres")
  fail:          msg="Detected ansible_user_id='{{ ansible_user_id}}'. This role must run as 'postgres'"

- name :         /var/log/postgres 
  file:          path=/var/log/postgresql   state=directory   owner=postgres  mode=0750

- name:           ensure no postmaster running at  cluster
  shell:          "pg_ctl -D {{ cluster_path }} stop"
  ignore_errors:  True
  environment:  
     PATH:        "{{ HOME }}/postgres/dist-pg/bin:{{ ansible_env.PATH}}:/usr/bin"

- name:          rm -rf ~/{{ cluster_path }}/*
  when:          purge_directory
  shell:         "rm -rf {{cluster_path}}/*"
  #if not a mountpoit#    file: dest="{{HOME}}/postgres/{{cluster_path}}"  state=absent


- name:         "initdb  {{ initdb_options}} {{ cluster_path }}"
  shell:        "initdb {{ initdb_options}} {{ cluster_path }}"
  environment:
     PATH:        "{{ HOME }}/postgres/dist-pg/bin:{{ ansible_env.PATH}}:/usr/bin"

################## conf.d    ##########################################################################
 
- name:         mkdir conf.d
  file:         dest="{{ cluster_path }}/conf.d"  state=directory


- name:         io_1.conf
  template:    src=io_1.conf.j2   dest="{{ cluster_path }}/conf.d/io_1.conf"  owner=postgres

- name:        postgresql.conf   with conf.d/
  lineinfile:
     path:         "{{ cluster_path }}/postgresql.conf"
     insertafter:  "^#include_dir = 'conf.d'"
     line:         "include_dir = 'conf.d'"

- name:       ~/.bash_pg
  replace:    dest="{{ HOME }}/postgres/.bash_pg"  regexp='543.'  replace="{{pport}}"
  ignore_errors: yes
  when:       false
#####################################################################################################
